{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/mocks/user.mocks.ts","../../src/providers/git-hub-service/git-hub-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/mocks/repository.mocks.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 108\n// module chunks = 2","var map = {\n\t\"../pages/profile-search-result/profile-search-result.module\": [\n\t\t273,\n\t\t0\n\t],\n\t\"../pages/profile-search/profile-search.module\": [\n\t\t274,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 2","import { User } from '../models/user.interface'\n\nconst userList: User[] = [\n    {\n        name: 'Raymond Tejano',\n        company: 'Hatag Inc,',\n        location: 'Davao City, Philippines',\n        bio: 'No bio at the moment',\n        avatar_url: 'http://i.imgur.com/jav62p6.jpg',\n        email: 'mon_tejano@yahoo.com'\n    },\n    {\n        name: 'Diomellah O. Tejano',\n        company: 'Hatag Inc.',\n        location: 'Davao City, Philippines',\n        bio: 'No bio at the moment',\n        avatar_url: 'http://i.imgur.com/TzWcihb.png',\n        email: 'john@doe.com'\n\n    }\n]\n\nexport const USER_LIST = userList;\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/user.mocks.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http'; \nimport { Observable} from 'rxjs/Observable'\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/throw';\n\n\nimport { User } from '../../models/user.interface'\nimport { Repository} from '../../models/repository.interface'\n\nimport { USER_LIST } from '../../mocks/user.mocks'\nimport { REPOSITORY_LIST } from '../../mocks/repository.mocks'\n\n/*\n  Generated class for the GitHubServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GitHubServiceProvider {\n\n  private baseUrl: string = \"https://api.github.com/users\";\n  private reposUrl: string = \"repos\";\n\n\n  constructor(private http: Http) {\n    console.log('Hello GitHubServiceProvider Provider');\n  }\n\n  /*\n    Finding the username from within the USER_LIST, equal to the username passed in.\n    Returning the results as an Observable.\n  */\n\n  getUserInformation(userName : string): Observable<User> {\n    return this.http.get(`${this.baseUrl}/${userName}`)\n    .do(this.logData)\n    .map(this.extractData)\n    .do(this.logData)\n    .catch(this.handleError)\n  }\n\n  getRepositoryInformation(userName: string): Observable<Repository[]>{\n    return this.http.get(`${this.baseUrl}/${userName}/${this.reposUrl}`)\n    .do(this.logData)\n    .map(this.extractData)\n    .do(this.logData)\n    .catch(this.handleError)\n  }\n\n  private extractData(response : Response) {\n    return response.json();\n  }\n  \n  private logData(response : Response) {\n    console.log(response);\n  }\n  \n  private handleError(error : Response | any) {\n    return Observable.throw(error.json().error || \"Server Error.\")\n  }\n\n  mockGetUserInformation(userName: string): Observable<User> {\n    return Observable.of(USER_LIST.filter((user : User) =>  user.name.toLowerCase().search(userName.toLowerCase().trim()) !== -1)[0])\n  }\n\n  mockGetRepositoryInformation(userName: string): Observable<Repository[]> {\n    return Observable.of(REPOSITORY_LIST.filter((repository : Repository) => repository.owner.name.toLowerCase().search(userName.toLowerCase().trim()) !== -1))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/git-hub-service/git-hub-service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { HttpModule} from '@angular/http';\n\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\n\nimport { MyApp } from './app.component';\nimport { GitHubServiceProvider } from '../providers/git-hub-service/git-hub-service';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n   \n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    \n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    GitHubServiceProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Repository } from '../models/repository.interface';\nimport { USER_LIST } from './user.mocks';\n\nconst repositoryList: Repository[] =[\n    {\n        name: 'Ionic 3 Camera',\n        description: 'This repository show the usage of the Camera under Ionic 3',\n        owner: USER_LIST[0]\n    },\n    {\n        name: 'Ionic 3 SMS',\n        description: 'This repository show the usage of the SMS under Ionic 3',\n        owner: USER_LIST[1]\n    },\n    {\n        name: 'Ionic 3 Geolocation',\n        description: 'This repository show the usage of the Geolocation under Ionic 3',\n        owner: USER_LIST[0]\n    },\n    {\n        name: 'Ionic 3 Vibration',\n        description: 'This repository show the usage of the Vibration under Ionic 3',\n        owner: USER_LIST[1]\n    }\n]\n\nexport const REPOSITORY_LIST = repositoryList;\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/repository.mocks.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage: string = 'ProfileSearchPage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}